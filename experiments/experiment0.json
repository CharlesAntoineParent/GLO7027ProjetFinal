{
    "label": "experiment0", 
    "dataset": "datasets.data_MNIST", 
    "flows": 
    [
    {
        "type": "LOAD_DATA",
        "flow": "loadData.load_MNIST_flow",
        "transformation": "transformations.default_transformation",
        "split": "splits.average_val"
    }, 
    {
        "type": "INITIALIZE_MODEL",
        "flow": "initializeModel.initialize_irma4_AutoEncoder_flow",
        "initialization": "initializations.default_init", 
        "network": ["classicEncoder.Encoder", "irma.Linear", "classicDecoder.Decoder"]
    }, 
    {
        "type": "TRAIN_MODEL",
        "flow": "trainModel.train_model_flow",
        "device": "devices.cuda", 
        "hyperparameters": "hyperparameters.hyperparameters_Adam_1", 
        "optimizer": "optimizers.Adam_optimizer",
        "criterion": "losses.CrossEntropy_criterion",
        "metrics": "metrics.accuracy_metric",
        "labels": 
            {
                "model": "resnet18",
                "hyperparameters": "lr=0.001",
                "optimizer": "Adam",
                "criterion": "CrossEntropy", 
                "metrics": "Accuracy"
            }
    }, 
    {
        "type": "INITIALIZE_MODEL",
        "flow": "initializeModel.initialize_resnet18_flow",
        "initialization": "initializations.pretrained", 
        "network": "None"
    }, 
    {
        "type": "TRAIN_MODEL",
        "flow": "trainModel.train_model_flow",
        "device": "devices.cuda", 
        "hyperparameters": "hyperparameters.hyperparameters_Adam_1", 
        "optimizer": "optimizers.Adam_optimizer",
        "criterion": "losses.CrossEntropy_criterion",
        "metrics": "metrics.accuracy_metric",
        "labels": 
            {
                "model": "resnet18",
                "hyperparameters": "lr=0.002",
                "optimizer": "Adam",
                "criterion": "CrossEntropy", 
                "metrics": "Accuracy"
            }
    }, 
    {
        "type": "CONSTRUCT_GRAPHICS",
        "flow": "constructGraphics.construct_loss_graphics_flow", 
        "arguments": ["train", "train_val"]
    },
    {
        "type": "CONSTRUCT_GRAPHICS",
        "flow": "constructGraphics.construct_metrics_graphics_flow", 
        "arguments": ["train", "train_val"]
    },
    {
        "type": "SAVE_RESULTS",
        "flow": "saveResults.save_results_flow", 
        "path": "results.results_path"
    }
    ]
}